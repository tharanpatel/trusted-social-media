{"ast":null,"code":"var _jsxFileName = \"/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/pages/login/Login.jsx\",\n  _s = $RefreshSig$();\nimport \"./login.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    name: \"\",\n    password: \"\"\n  });\n\n  /* the use of a spread operator (...prev) means all values are kept the same except the one that is \n  being 'focused' on by the user, which will be changed as the user types\n  */\n  const handleChange = e => {\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleLogin = async e => {\n    e.preventDefault(); // prevents refreshing page\n    try {\n      await login(inputs);\n      navigate(\"/\"); // Redirects user to homepage upon succesful login\n    } catch (err) {\n      setErr(err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"trustMe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"forgotten password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"PZHMPWUDYEMjgmWno5OLkmZgDbc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Login","_s","inputs","setInputs","useState","username","name","password","handleChange","e","prev","target","value","handleLogin","preventDefault","login","navigate","err","setErr","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","to","_c","$RefreshReg$"],"sources":["/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/pages/login/Login.jsx"],"sourcesContent":["import \"./login.scss\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Login = () => {\n\n  const [inputs, setInputs] = useState({\n    username:\"\",\n    name:\"\",\n    password:\"\"\n  })\n\n  /* the use of a spread operator (...prev) means all values are kept the same except the one that is \n  being 'focused' on by the user, which will be changed as the user types\n  */\n  const handleChange = e =>{\n    setInputs(prev=>({...prev, [e.target.name]:e.target.value})) \n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault() // prevents refreshing page\n    try{\n      await login(inputs);\n      navigate(\"/\"); // Redirects user to homepage upon succesful login\n    } catch (err){\n      setErr(err.response.data);\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"container\">\n        <div className=\"left\">\n          <h1>Welcome to <span>trustMe</span></h1>\n        </div>\n        <div className=\"right\">\n          <h1>Login</h1>\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"password\" placeholder=\"Password\" />\n          <span>forgotten password?</span>\n          <div className=\"buttons\">\n            <button>Login!</button>\n            <Link to=\"/register\">\n              <button>Register</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC;IACnCC,QAAQ,EAAC,EAAE;IACXC,IAAI,EAAC,EAAE;IACPC,QAAQ,EAAC;EACX,CAAC,CAAC;;EAEF;AACF;AACA;EACE,MAAMC,YAAY,GAAGC,CAAC,IAAG;IACvBN,SAAS,CAACO,IAAI,KAAG;MAAC,GAAGA,IAAI;MAAE,CAACD,CAAC,CAACE,MAAM,CAACL,IAAI,GAAEG,CAAC,CAACE,MAAM,CAACC;IAAK,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOJ,CAAC,IAAK;IAC/BA,CAAC,CAACK,cAAc,CAAC,CAAC,EAAC;IACnB,IAAG;MACD,MAAMC,KAAK,CAACb,MAAM,CAAC;MACnBc,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAC;MACXC,MAAM,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC;IAC3B;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBvB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBvB,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBvB,OAAA;UAAAuB,QAAA,GAAI,aAAW,eAAAvB,OAAA;YAAAuB,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACN3B,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBvB,OAAA;UAAAuB,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACd3B,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5C3B,OAAA;UAAO4B,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChD3B,OAAA;UAAAuB,QAAA,EAAM;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChC3B,OAAA;UAAKsB,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBvB,OAAA;YAAAuB,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvB3B,OAAA,CAACF,IAAI;YAACgC,EAAE,EAAC,WAAW;YAAAP,QAAA,eAClBvB,OAAA;cAAAuB,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA9CKD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAgDX,eAAeA,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}