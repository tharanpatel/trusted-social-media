{"ast":null,"code":"var _jsxFileName = \"/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comments\", newComment);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\"); // allows us to set comment back to empty string\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc // allows us to set comment back to empty string\n        ,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"Fsi/C5X0aJaIFg1YxzJ6bbBdWOc=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postId","_s","desc","setDesc","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\n\nconst Comments = ({ postId }) => {\n  const [desc, setDesc] = useState(\"\");\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery([\"comments\"], () =>\n    makeRequest.get(\"/comments?postId=\" + postId).then((res) => {\n      return res.data;\n    })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (newComment) => {\n    return makeRequest.post(\"/comments\", newComment);\n  },\n  {\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"comments\"])\n    },\n   }\n  );\n\n  const handleClick = async e =>{\n    e.preventDefault();\n    mutation.mutate({ desc, postId});\n    setDesc(\"\"); // allows us to set comment back to empty string\n  };\n\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input\n         type=\"text\"\n         placeholder=\"write a comment\"\n         value={desc} // allows us to set comment back to empty string\n         onChange={e=>setDesc(e.target.value)}\n        />\n        <button onClick={handleClick}>Send</button>\n      </div>\n      {isLoading \n        ? \"loading\"\n        : data.map((comment) => (\n        <div className=\"comment\">\n          <img src={comment.profilePic} alt=\"\" />\n          <div className=\"info\">\n            <span>{comment.name}</span>\n            <p>{comment.desc}</p>\n          </div>\n          <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}