{"ast":null,"code":"var _jsxFileName = \"/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/components/comments/Comments.jsx\",\n  _s2 = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      isLoading,\n      error,\n      data\n    } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n      return res.data;\n    }));\n  }, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n    return [useQuery];\n  })), \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n    return [useQuery];\n  });\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comments\", newComment);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\"); // allows us to set comment back to empty string\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc // allows us to set comment back to empty string\n        ,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(Comments, \"QmBRoUqkAX87Oaxz7DyuNlQ+Ck4=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","jsxDEV","_jsxDEV","Comments","postId","_s2","_s","$RefreshSig$","desc","setDesc","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","name","id","_c","$RefreshReg$"],"sources":["/Users/tharanpatel/Documents/University Stuff/CSC8099 - Project and Dissertation/final-project-csc8099/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\n\nconst Comments = ({ postId }) => {\n  const [desc, setDesc] = useState(\"\");\n  const { currentUser } = useContext(AuthContext);\n\n\n  useEffect(() => {\n    const { isLoading, error, data } = useQuery([\"comments\"], () =>\n      makeRequest.get(\"/comments?postId=\" + postId).then((res) => {\n        return res.data;\n      })\n    );\n  })\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (newComment) => {\n      return makeRequest.post(\"/comments\", newComment);\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"comments\"])\n      },\n    }\n  );\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({ desc, postId });\n    setDesc(\"\"); // allows us to set comment back to empty string\n  };\n\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input\n          type=\"text\"\n          placeholder=\"write a comment\"\n          value={desc} // allows us to set comment back to empty string\n          onChange={e => setDesc(e.target.value)}\n        />\n        <button onClick={handleClick}>Send</button>\n      </div>\n      {isLoading\n        ? \"loading\"\n        : data.map((comment) => (\n          <div className=\"comment\" key={comment.id}>\n            <img src={comment.profilePic} alt=\"\" />\n            <div className=\"info\">\n              <span>{comment.name}</span>\n              <p>{comment.desc}</p>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}